gif exporter notes



add utility for writing raw frames glob
write stand-alone project for rapid performance testing and development

15-bit meta-meta-palette
early-out of palette selection loop (for performance)

SSE optimizations?
multithreading???
ensure it works with 32-bit code

allow "immediate mode" (frame-by-frame) export
	return opaque pointer to struct containing persistent state (no global data)
	limited ability for immediate-mode payoff because all frames must be cooked before any can be compressed
		allow compressing one-at-a-time to avoid long stalls?
			or just make it so damn fast that it doesn't matter :^)

allow user to specify channel importance (RGB, RBG, GRB, GBR, BRG, BGR)
allow user to provide their own malloc, realloc, free equivalents?
allow user to explicitly enable/disable SIMD paths
maybe allow different input formats (RGBA, BGRA, RGB, etc.)???
	look at how stb_image_write library handles these sort of API design decisions
	ask people on the discord for their input?

remove dependencies on other headers
remove C++isms to make it pure C code?
turn into single-header library
write documentation

dithering???
	would slow down cooking step and make it done twice (amortized) for each frame
		not easy to parallelize the first pass, because each frame depends on the last... maybe SIMD would help though?
			I'M AN IDIOT: the cooking algorithm is embarrassingly parallel! just multi-thread each frame individually!
			and yes, SIMD would help immensely. just don't downconvert to 16-bit ints, or find a better way to do that
true-color???
	bitfield for color tracker?
